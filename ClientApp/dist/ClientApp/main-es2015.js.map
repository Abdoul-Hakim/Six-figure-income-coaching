{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/modal/modal.component.ts","./src/app/modal/modal.component.html","./src/app/services/link.service.ts","./src/app/services/modal.service.ts","./src/app/services/smtp.service.ts","./src/app/unsubscribe/unsubscribe.component.ts","./src/app/unsubscribe/unsubscribe.component.html","./src/assets/js/smtp.js","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { UnsubscribeComponent } from './unsubscribe/unsubscribe.component';\r\nimport { HomeComponent } from './home/home.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'unsubscribe',\r\n    component: UnsubscribeComponent,\r\n  },\r\n  {\r\n    path: 'home',\r\n    component: HomeComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'ClientApp';\r\n\r\n  constructor(\r\n  ){}\r\n\r\n  ngOnInit(): void {\r\n  }\r\n}\r\n","<app-header></app-header>\r\n<main>\r\n  <router-outlet></router-outlet>\r\n</main>\r\n<footer>\r\n  Icons made by <a href=\"https://www.flaticon.com/free-icon/dollar_845665\" title=\"Kiranshastry\"> Kiranshastry</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\"> www.flaticon.com</a>\r\n</footer>\r\n\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatInputModule} from '@angular/material/input';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { ModalComponent } from './modal/modal.component';\r\nimport { UnsubscribeComponent } from './unsubscribe/unsubscribe.component';\r\nimport { HomeComponent } from './home/home.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HeaderComponent,\r\n    ModalComponent,\r\n    UnsubscribeComponent,\r\n    HomeComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MatButtonModule,\r\n    MatDialogModule,\r\n    MatInputModule\r\n  ],\r\n\r\n  bootstrap: [AppComponent],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n  <h1 class=\"m-0\">Six figures income coaching</h1>\n</div>\n<div class=\"divider\"></div>\n","import { Component, OnInit } from '@angular/core';\r\nimport { ModalService } from '../services/modal.service';\r\nimport { LinkService } from '../services/link.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ModalComponent } from '../modal/modal.component';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  link: string;\r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private linkProvider: LinkService,\r\n    private modalStateProvider: ModalService\r\n  ){}\r\n\r\n  ngOnInit(): void {\r\n    setTimeout(() => {\r\n      this.dialog.open(ModalComponent);\r\n      this.modalStateProvider.updateModalState(true);\r\n    }, 1500);\r\n    this.linkProvider.currentLink.subscribe(link => this.link = link);\r\n    this.modalStateProvider.currentModalState.subscribe(state => {\r\n      if (!state){\r\n        this.dialog.closeAll();\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<h2>Check out how this guy makes <span>$1,000,000+</span> while traveling the world!</h2>\r\n<video controls>\r\n  <source src=\"../assets/video/trailer_v1.mp4\" type=\"video/mp4\">\r\n</video>\r\n<button><a [href]=\"link\">Get your exclusive training!</a></button>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { LinkService } from '../services/link.service';\r\nimport { ModalService } from '../services/modal.service';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { SmtpService } from '../services/smtp.service';\r\n\r\n@Component({\r\n  selector: 'app-modal',\r\n  templateUrl: './modal.component.html',\r\n  styleUrls: ['./modal.component.scss']\r\n})\r\nexport class ModalComponent implements OnInit {\r\n\r\n\r\n  private text;\r\n\r\n  contactForm = new FormGroup({\r\n    userEmail: new FormControl('')\r\n  });\r\n\r\n  confirmation = false;\r\n  confirmed = true;\r\n  emailError = false;\r\n\r\n\r\n  constructor(\r\n    private modalStateProvider: ModalService,\r\n    private smtpProvider: SmtpService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  confirm(){\r\n    const pattern = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    if (this.text.match(pattern) !== null){\r\n      this.confirmation = true;\r\n      this.smtpProvider.sendSubscribe(this.text);\r\n      setTimeout(() => {\r\n        this.modalStateProvider.updateModalState(false);\r\n      }, 2500);\r\n    } else {\r\n      this.emailError = true;\r\n    }\r\n  }\r\n\r\n  inputChange(e: any): void{\r\n    this.text = e.target.value;\r\n  }\r\n\r\n}\r\n","<ng-container *ngIf=\"confirmation === false; else elseBlock\">\r\n  <h1>Get your <span>FREE COPY</span> of this online income method</h1>\r\n</ng-container>\r\n<ng-template #elseBlock>\r\n  <h1><span>THANK YOU</span> for downloading this document</h1>\r\n  <p>You will get your email in few seconds. (You may need to check your spam)</p>\r\n</ng-template>\r\n\r\n<picture>\r\n  <img src=\"../../assets/images/image.png\" alt=\"Find out how this guy makes 1,000,000+ while travelling the world\"/>\r\n\r\n</picture>\r\n<form formGroup=\"contactForm\">\r\n  <mat-form-field>\r\n    <mat-label>Write your Email</mat-label>\r\n    <input [errorStateMatcher]=\"emailError\" (change)=\"inputChange($event)\"  formControlName=\"userEmail\" matInput placeholder=\"youremail@example.com\"  type=\"email\" ngModel email required>\r\n  </mat-form-field>\r\n  <mat-error *ngIf=\"emailError\">\r\n    please enter a valid email address\r\n  </mat-error>\r\n\r\n  <button type=\"button\" mat-raised-button color=\"primary\" (click)=\"confirm()\">Get it NOW</button>\r\n</form>\r\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LinkService {\n\n  currentLink: BehaviorSubject<string> = new BehaviorSubject('https://www.digistore24.com/redir/300124/Prithvik/');\n\n  constructor() { }\n\n  updateLink(newLink: string){\n    this.currentLink.next(newLink);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ModalService {\n\n  private modalState: BehaviorSubject<boolean> = new BehaviorSubject(false);\n  currentModalState = this.modalState.asObservable();\n\n  constructor() { }\n\n  updateModalState(state: boolean): void{\n    this.modalState.next(state);\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport '../../assets/js/smtp.js';\r\ndeclare let Email: any;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SmtpService {\r\n\r\n  constructor() { }\r\n\r\n  async sendSubscribe(email: string) {\r\n    Email.send({\r\n      Host: 'smtp.elasticemail.com',\r\n      Username: 'kichuprithvik@gmail.com',\r\n      Password: '40112FDD1FFE340C82973EAA84C4BDACF6FA',\r\n      To : email,\r\n      From : 'kichuprithvik@gmail.com',\r\n      Subject : 'A new client has registred',\r\n      Body : `<p>A new client with the email ${email} has registred!!!<p>`\r\n    });\r\n  }\r\n\r\n  async sendUnsubscribe(email: string){\r\n    Email.send({\r\n      Host: 'smtp.elasticemail.com',\r\n      Username: 'kichuprithvik@gmail.com',\r\n      Password: '40112FDD1FFE340C82973EAA84C4BDACF6FA',\r\n      To : 'kichuprithvik@gmail.com',\r\n      From : 'kichuprithvik@gmail.com',\r\n      Subject : 'Client has unsubscribed',\r\n      Body : `<p>The client with the email ${email} has unsubscribed!<p>`\r\n      + '<p>Send him no more emails.</p>'\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { SmtpService } from '../services/smtp.service';\r\n\r\n@Component({\r\n  selector: 'app-unsubscribe',\r\n  templateUrl: './unsubscribe.component.html',\r\n  styleUrls: ['./unsubscribe.component.scss']\r\n})\r\nexport class UnsubscribeComponent implements OnInit {\r\n\r\n  private text;\r\n  confirmed = true;\r\n  emailError = false;\r\n  response = true;\r\n  confirmation = false;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private smtpProvider: SmtpService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  unsubscription(answer: boolean){\r\n    if (answer){\r\n      this.response = false;\r\n    } else {\r\n      this.router.navigate(['/home']);\r\n    }\r\n  }\r\n\r\n  confirm(answer: boolean){\r\n    const pattern = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    if (this.text.match(pattern) !== null){\r\n      this.confirmation = answer;\r\n      this.confirmation = true;\r\n      this.smtpProvider.sendUnsubscribe(this.text);\r\n    } else {\r\n      this.emailError = true;\r\n    }\r\n  }\r\n\r\n  inputChange(e: any): void{\r\n    this.text = e.target.value;\r\n  }\r\n\r\n}\r\n","<ng-template [ngIf]=\"response === true\" [ngIfElse]=\"elseBlock\">\r\n  <h1><b>Are you sure you want to leave?</b></h1>\r\n  <p>You'll miss increadible opportunities to get rich and have a successfull career!</p>\r\n  <div class=\"container\">\r\n    <button type=\"button\" mat-raised-button color=\"primary\" (click)=\"unsubscription(true)\">Yes</button>\r\n    <button type=\"button\" mat-raised-button color=\"primary\" (click)=\"unsubscription(false)\">No</button>\r\n  </div>\r\n</ng-template>\r\n<ng-template #elseBlock>\r\n  <ng-template [ngIf]=\"confirmation === true\" [ngIfElse]=\"noConfirmation\">\r\n    <h1><b>Good Bye!</b></h1>\r\n    <p>Your unsubscription has been confirmed</p>\r\n  </ng-template>\r\n  <ng-template #noConfirmation>\r\n    <h1><b>Enter your email to confirm</b></h1>\r\n    <mat-form-field>\r\n      <mat-label>Write your Email</mat-label>\r\n      <input [errorStateMatcher]=\"emailError\" (change)=\"inputChange($event)\"  formControlName=\"userEmail\" matInput placeholder=\"youremail@example.com\"  type=\"email\" ngModel email required>\r\n    </mat-form-field>\r\n    <mat-error *ngIf=\"emailError\">\r\n      please enter a valid email address\r\n    </mat-error>\r\n    <div class=\"container-single\">\r\n      <button type=\"button\" mat-raised-button color=\"primary\" (click)=\"confirm(true)\">Confirm</button>\r\n    </div>\r\n  </ng-template>\r\n</ng-template>\r\n\r\n\r\n\r\n","﻿/* SmtpJS.com - v3.0.0 */\r\nvar Email = { send: function (a) { return new Promise(function (n, e) { a.nocache = Math.floor(1e6 * Math.random() + 1), a.Action = \"Send\"; var t = JSON.stringify(a); Email.ajaxPost(\"https://smtpjs.com/v3/smtpjs.aspx?\", t, function (e) { n(e) }) }) }, ajaxPost: function (e, n, t) { var a = Email.createCORSRequest(\"POST\", e); a.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\"), a.onload = function () { var e = a.responseText; null != t && t(e) }, a.send(n) }, ajax: function (e, n) { var t = Email.createCORSRequest(\"GET\", e); t.onload = function () { var e = t.responseText; null != n && n(e) }, t.send() }, createCORSRequest: function (e, n) { var t = new XMLHttpRequest; return \"withCredentials\" in t ? t.open(e, n, !0) : \"undefined\" != typeof XDomainRequest ? (t = new XDomainRequest).open(e, n) : t = null, t } };","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}